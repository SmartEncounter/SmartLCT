<Nova_SmartLCT_Interface:CustomWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Nova.SmartLCT.UI" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:Nova_SmartLCT_Interface="clr-namespace:Nova.SmartLCT.Interface;assembly=Nova.SmartLCT.Interface.CommonData" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:GalaSoft_MvvmLight_Command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" mc:Ignorable="d" x:Class="Nova.SmartLCT.UI.EquipmentManager"
        Title="{DynamicResource Lang_SmartLCT_SystemCheckDlg}" Height="459"  Width="781" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" HorizontalContentAlignment="Center" Closing="Window_Closing" Background="#FF303435" WindowStyle="None" AllowsTransparency="True">
	<Window.Resources>
        <local:EquipmentManager_VM x:Key="EquipmentManager_VMDataSource" d:IsDataSource="True"/>
		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
		
		 <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="Black" BorderThickness="1" CornerRadius="3">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">



                                    <GradientStop Color="#FF3995DE" Offset="0"/>
                                    <GradientStop Color="#FF057AD7" Offset="1"/>
                                    <GradientStop Color="#FF057AD7" Offset="0.525"/>
                                    <GradientStop Color="#FF3995DE" Offset="0.495"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF75ECF2" Offset="0"/>
                                            <GradientStop Color="#FF19E0E7" Offset="1"/>
                                            <GradientStop Color="#FF19E0E7" Offset="0.5"/>
                                            <GradientStop Color="#FF75ECF2" Offset="0.495"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		<Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
			<Setter Property="Width" Value="8"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Cursor" Value="SizeWE"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="DataGridColumnHeaderStyle_Common" TargetType="{x:Type DataGridColumnHeader}">
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
						<Grid>
							<Microsoft_Windows_Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" Background="#FF373B3C">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Microsoft_Windows_Themes:DataGridHeaderBorder>
							<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" Foreground="Gainsboro"/>
							<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" Foreground="Gainsboro"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DataGridRowStyle_Common" TargetType="{x:Type DataGridRow}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
			<Setter Property="ValidationErrorTemplate">
				<Setter.Value>
					<ControlTemplate>
						<TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGridRow}">
						<Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="#FF585858">
							<SelectiveScrollingGrid>
								<SelectiveScrollingGrid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</SelectiveScrollingGrid.ColumnDefinitions>
								<SelectiveScrollingGrid.RowDefinitions>
									<RowDefinition Height="*"/>
									<RowDefinition Height="Auto"/>
								</SelectiveScrollingGrid.RowDefinitions>
								<DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
								<DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
							</SelectiveScrollingGrid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</Window.Resources>
	<Window.DataContext>
        <Binding Source="{StaticResource EquipmentManager_VMDataSource}"/>
	</Window.DataContext>
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Closing">
			<GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding CmdMainWindowClose, Mode=OneWay}" PassEventArgsToCommand="True"/>
		</i:EventTrigger>
	</i:Interaction.Triggers>
    <Grid DataContext="{Binding Source={StaticResource EquipmentManager_VMDataSource}}" Height="433" Width="770">
        <Grid.RowDefinitions>
    		<RowDefinition Height="0.846*"/>
    		<RowDefinition Height="Auto"/>
    	</Grid.RowDefinitions>
        <DataGrid AutoGenerateColumns="False" CanUserAddRows="False" CanUserResizeRows="True" CanUserSortColumns="False" HorizontalAlignment="Left" IsReadOnly="True" ItemsSource="{Binding EquipmentTypeInfoList, Mode=TwoWay}" x:Name="dataGrid" Width="768" Margin="0,0,0,1" RowHeaderWidth="0" Background="#FF414244" Foreground="Gainsboro" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle_Common}" RowStyle="{DynamicResource DataGridRowStyle_Common}" BorderBrush="#FF545454">
            <DataGrid.Columns>
            	<DataGridTemplateColumn Visibility="{Binding CheckBoxVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=true, Mode=TwoWay}">
            		<DataGridTemplateColumn.CellTemplate >
            			<DataTemplate >
            				<StackPanel>
                                <CheckBox Foreground="#FFDCDCDC"  HorizontalAlignment="Center" HorizontalContentAlignment="Center" IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" IsEnabled="{Binding CheckBoxEnable}" 
            						Visibility="{Binding CheckBoxVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=true, Mode=TwoWay}" 
            						CommandParameter="{Binding IsChecked, Mode=OneWay}" Command="{Binding CmdIsChecked, Mode=OneWay}"/>
            				</StackPanel>
            			</DataTemplate>
            		</DataGridTemplateColumn.CellTemplate>
            	</DataGridTemplateColumn>
            	<DataGridTextColumn Binding="{Binding SerialPort}" Header="{DynamicResource Lang_EquipmentManager_SerialPort}" Width="*" />
            	<DataGridTextColumn Binding="{Binding DeviceType}" Header="{DynamicResource Lang_EquipmentManager_DeviceType}" Width="*" />
            	<DataGridTextColumn Binding="{Binding PortCount}" Header="{DynamicResource Lang_EquipmentManager_PortCount}" Width="*" />
            </DataGrid.Columns>
        </DataGrid>
        <Button Content="{DynamicResource Lang_EquipmentManager_Send}" HorizontalAlignment="Right" Margin="0,12,145,13" x:Name="button1" Width="75" Command="{Binding CmdSendDataToHW, Mode=OneWay}" Grid.Row="1" d:LayoutOverrides="GridBox" Visibility="{Binding IsSendDataWindow, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" Height="25" />
        <Button Command="{Binding CmdSetDataToHW, Mode=OneWay}" Content="{DynamicResource Lang_EquipmentManager_SendToHW}" HorizontalAlignment="Right" Margin="0,12,31,13" x:Name="button2" Visibility="{Binding IsSendDataWindow, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" Width="75" Grid.Row="1" Height="25" />
    </Grid>
</Nova_SmartLCT_Interface:CustomWindow>
