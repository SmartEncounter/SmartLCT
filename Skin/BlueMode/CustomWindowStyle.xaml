<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"    
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"     
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"   
                    xmlns:Nova_SmartLCT_Behavior="clr-namespace:Nova.SmartLCT.Behavior;assembly=Behavior"        
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"   
                    mc:Ignorable="d"   
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna">

    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
                <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" IsTabStop="false" Visibility="Collapsed"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CustomWindowControlTemplate"  TargetType="{x:Type Window}">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10,10,0,0" d:DesignHeight="106.166" d:DesignWidth="565.541">
            <AdornerDecorator>
                <Grid Width="Auto" Height="Auto" VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="3"></RowDefinition>
                    <RowDefinition Height="29.333"/>
                    <RowDefinition/>
                    <RowDefinition Height="3"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Border x:Name="topborder" Margin="0" Grid.Row="1" Grid.Column="1"  BorderBrush="{x:Null}" BorderThickness="0" CornerRadius="0,0,0,0" Grid.ColumnSpan="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="1"/>
                            <GradientStop Color="#FF5B5B5B"/>
                            <GradientStop Color="#FF454545" Offset="0.5"/>
                            <GradientStop Color="#FF1A1A1A" Offset="0.9"/>
                            <GradientStop Color="#FF373737" Offset="0.51"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Grid HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch" Width="Auto" Height="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="28.207"/>
                            <ColumnDefinition Width="30.016"/>
                            <ColumnDefinition Width="27.398"/>
                            <ColumnDefinition Width="7.586"/>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="btnTitle" Height="18"  Margin="2.668,2.795,2.777,3.776" Grid.Column="0"/>
                        <TextBlock Margin="2,3,0,7.646" Grid.Column="1" Name="title" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center" Width="Auto" Height="Auto" FontSize="14.667" Foreground="White"/>
                        <Button x:Name="btnMin" Height="27" Width="27"  Style="{DynamicResource CommonButtonStyle}"  Margin="2.668,2.795,2.777,3.776" Grid.Column="3" FontWeight="Bold" FontSize="16">
                            <Button.Background>
                                <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/min.png"/>
                            </Button.Background>
                            <i:Interaction.Behaviors>
                                <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                        <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Disable/min.png"/>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                        <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/min.png"/>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                        <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Selecte/min.png"/>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button x:Name="btnMax" Height="27" Width="27" Style="{DynamicResource CommonButtonStyle}"  Margin="3.891,2.795,3.363,3.776" FontWeight="Bold" Grid.Column="4" FontSize="16">
                            <Button.Background>
                                <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/normal.png"/>
                            </Button.Background>
                            <!--<i:Interaction.Behaviors>
                                <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                        <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Disable/normal.gif"/>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                        <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/normal.gif"/>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                        <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Selecte/normal.gif"/>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                            </i:Interaction.Behaviors>-->
                            </Button>
                            <Button x:Name="btnClose" Margin="2.668,2.795,1.968,3.776" Height="27" Width="27" FontWeight="Bold" Grid.Column="5" Style="{DynamicResource CommonButtonStyle}" Foreground="Black" FontSize="16">
                                <Button.Background>
                                    <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/Close.png"/>
                                </Button.Background>
                                <i:Interaction.Behaviors>
                                <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Disable/Close.png"/>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/Close.png"/>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Selecte/Close.png"/>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                            </i:Interaction.Behaviors>
             
                            </Button>
                    </Grid>
                </Border>
                <Grid Margin="0" Grid.Row="2" Grid.Column="1">
                    <ContentPresenter HorizontalAlignment="Stretch" Margin="0" Width="Auto"/>
                </Grid>
                <Rectangle Name="left" Fill="Black"  Opacity="0.5"  Grid.Row="1" Grid.Column="0" Grid.RowSpan="2"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Rectangle>
                <Rectangle Name="right" Fill="Black" Opacity="0.5" Grid.Row="1" Grid.Column="2" Grid.RowSpan="2"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Rectangle>
                <Rectangle Name="up" Fill="Black" Opacity="0.5" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Rectangle>
                <Rectangle Name="down" Fill="Black" Opacity="0.5" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Rectangle>
                <Rectangle Name="leftDown" Fill="Black" Opacity="0.5" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Rectangle>
                <Rectangle Name="rightDown" Fill="Black" Opacity="0.5" Grid.Row="3" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Rectangle>
                <Rectangle Name="leftUp" Fill="Black" Opacity="0.5" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Rectangle>
                <Rectangle Name="rightUp" Fill="Black" Opacity="0.5" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Rectangle>
            </Grid>
            </AdornerDecorator>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="Background" TargetName="btnMax" >
                    <Setter.Value>
                        <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/normal.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="WindowState" Value="Maximized"/>
                    <Condition Property="IsMouseOver"  Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{Binding EleType,Converter={StaticResource eleTypeConverterColor}}" >
                </Setter>
            </MultiTrigger>-->
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="Background" TargetName="btnMax" >
                    <Setter.Value>
                        <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/max.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CustomWindowStyle"  TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Template" Value="{StaticResource CustomWindowControlTemplate}"/>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3" SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackgroundFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" Offset="0"/>
        <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonBorder" Color="#FF003C74"/>
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" SnapsToDevicePixels="true" RenderDefaulted="{TemplateBinding IsDefaulted}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" ThemeColor="NormalColor" BorderBrush="{DynamicResource ButtonBorder}">
                        <Microsoft_Windows_Themes:ButtonChrome.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFF4747" Offset="0.234"/>
                                <GradientStop Color="#FFFFA5A5" Offset="1"/>
                            </LinearGradientBrush>
                        </Microsoft_Windows_Themes:ButtonChrome.Fill>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                    </Microsoft_Windows_Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>