<Nova_SmartLCT_Interface:CustomWindow
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Nova_Wpf_Control="clr-namespace:Nova.Wpf.Control;assembly=Nova.Wpf.Control.NumericUpDown"  
    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"    
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"    
    xmlns:Nova_SmartLCT_Interface="clr-namespace:Nova.SmartLCT.Interface;assembly=Nova.SmartLCT.Interface.CommonData" 
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"   
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:Nova.SmartLCT.UI" mc:Ignorable="d"
	x:Class="Nova.SmartLCT.UI.Window_FastSegmentation"
	x:Name="Window"
	Title="{DynamicResource Lang_Bright_FastSegmentation}"
	Width="373" Height="345" Background="#FF303435" Foreground="Gainsboro" Closed="Window_Closed" AllowsTransparency="True" WindowStyle="None" ResizeMode="NoResize">

    <Window.Resources>
        <local:Window_FastSegmentation_VM x:Key="Window_FastSegmentation_VMDataSource" d:IsDataSource="True"/>


        <ControlTemplate x:Key="ScrollViewerControlTemplate_Center" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="#FF303435" Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border BorderBrush="#FF303435"  BorderThickness="0,1,0,0">
                            <Border BorderBrush="#FF202123" BorderThickness="0,0,0,1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                        <GradientStop Color="#FFAAAAAA" Offset="1"/>
                                        <GradientStop Color="#FF646464" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbv" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border BorderBrush="#FF4A4B4D" BorderThickness="1,0,0,0">
                            <Border Background="{DynamicResource MyScrollTruckBackgroundv}" BorderBrush="#FF202123" BorderThickness="0,0,1,0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="Black" Offset="1"/>
            <GradientStop Color="#FF2C2D31"/>
            <GradientStop Color="#FF3E4042" Offset="0.083"/>
            <GradientStop Color="#FF303435" Offset="0.923"/>
            <GradientStop Color="#FF303435" Offset="0.104"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="MyScrollTruckBackground" EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="Black" Offset="1"/>
            <GradientStop Color="#FF545454"/>
            <GradientStop Color="#FF4D4E4E" Offset="0.08"/>
            <GradientStop Color="#FF303435" Offset="0.98"/>
            <GradientStop Color="#FF303435" Offset="0.075"/>
            <GradientStop Color="#FF4A4C4D"/>

        </LinearGradientBrush>
        <LinearGradientBrush x:Key="MyScrollTruckBackgroundv" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="Black" Offset="1"/>
            <GradientStop Color="#FF545454"/>
            <GradientStop Color="#FF4D4E4E" Offset="0.08"/>
            <GradientStop Color="#FF303435" Offset="0.98"/>
            <GradientStop Color="#FF303435" Offset="0.075"/>
            <GradientStop Color="#FF4A4C4D"/>
        </LinearGradientBrush>
        <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle_ScrollBarLineUp" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource SButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0,1">
                            <ed:RegularPolygon Height="6" InnerRadius="1" PointCount="3" Stretch="Fill" Width="8" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Fill="Gainsboro">
                                <ed:RegularPolygon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ed:RegularPolygon.RenderTransform>
                            </ed:RegularPolygon>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle_ScrollBarLineLeft" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource SButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0,1">
                            <ed:RegularPolygon Height="6" InnerRadius="1" PointCount="3" Stretch="Fill" Width="8" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Fill="Black">
                                <ed:RegularPolygon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ed:RegularPolygon.RenderTransform>
                            </ed:RegularPolygon>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle_ScrollBarLineRight" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource SButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0,1">
                            <ed:RegularPolygon Height="6" InnerRadius="1" PointCount="3" Stretch="Fill" Width="8" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Fill="Black">
                                <ed:RegularPolygon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ed:RegularPolygon.RenderTransform>
                            </ed:RegularPolygon>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style  TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="#FF303435"/>
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#FF4B4B4B">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <Button Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}"  Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow" Style="{DynamicResource ButtonStyle_ScrollBarLineUp}" Background="#FF646464" BorderThickness="0.5" BorderBrush="{x:Null}"/>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                                </Track.Thumb>
                            </Track>
                            <Button x:Name="repeatButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{DynamicResource ButtonStyle_ScrollBarLineDown}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow" Margin="0,0,0,-1" Background="#FF646464" BorderBrush="{x:Null}" BorderThickness="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bg" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}"  Style="{DynamicResource ButtonStyle_ScrollBarLineLeft}" Background="#FF303435" BorderThickness="0.5" BorderBrush="{x:Null}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbv}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                        </Track.Thumb>
                                    </Track>
                                    <Button Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}"  Style="{DynamicResource ButtonStyle_ScrollBarLineRight}" Background="#FF303435" BorderThickness="0.5" BorderBrush="{x:Null}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="Bg" Value="gray"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle_ScrollBarLineDown" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource SButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0,0.5" BorderBrush="Black">
                            <ed:RegularPolygon Height="6" InnerRadius="1" PointCount="3" Stretch="Fill" Width="8" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" Margin="5,0,0,0" Fill="Gainsboro" HorizontalAlignment="Left">
                                <ed:RegularPolygon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ed:RegularPolygon.RenderTransform>
                            </ed:RegularPolygon>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="bButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="bButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="bButtonNormalBorder" Color="#FF707070"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource bButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource bButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource bButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="Black" BorderThickness="1" CornerRadius="3">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">

                                    <GradientStop Color="#FF3995DE" Offset="0"/>
                                    <GradientStop Color="#FF057AD7" Offset="1"/>
                                    <GradientStop Color="#FF057AD7" Offset="0.525"/>
                                    <GradientStop Color="#FF3995DE" Offset="0.495"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF75ECF2" Offset="0"/>
                                            <GradientStop Color="#FF19E0E7" Offset="1"/>
                                            <GradientStop Color="#FF19E0E7" Offset="0.5"/>
                                            <GradientStop Color="#FF75ECF2" Offset="0.495"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid x:Name="LayoutRoot" DataContext="{Binding Source={StaticResource Window_FastSegmentation_VMDataSource}}">
        <TextBlock TextWrapping="Wrap" Text="{DynamicResource Lang_Bright_EnvironmentBright}" VerticalAlignment="Top" Margin="0,14,160,0" d:LayoutOverrides="Width" HorizontalAlignment="Center"/>
        <TextBlock HorizontalAlignment="Center" Margin="210,15,0,0" TextWrapping="Wrap" Text="{DynamicResource Lang_Bright_ScreenBright}" VerticalAlignment="Top"/>
        <Border Height="40" Margin="3,50,3,0" VerticalAlignment="Top" BorderThickness="1" BorderBrush="#FF5A5A5A">
            <Grid Margin="0" Height="42">
                <TextBlock TextWrapping="Wrap" Text="{DynamicResource Lang_Bright_Above}" HorizontalAlignment="Right" Margin="0,12,300,0" Width="Auto"  VerticalAlignment="Top"/>
                <Nova_Wpf_Control:NumericUpDown IsSelectedAll="True" x:Name="NumericUpDown_EnvironmentBrightMax" Width="74" Background="#FF4B4B4B" HorizontalAlignment="Left" Margin="83,6,0,0" VerticalAlignment="Top" Value="{Binding MaxEnvironmentBright, Mode=TwoWay}" MaxValue="10000000000" TabIndex="0" IsTabStop="True"/>
                <TextBlock TextWrapping="Wrap" Text="Lux      --&gt;" Margin="0,11,119,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="66"/>
                <Nova_Wpf_Control:NumericUpDown IsSelectedAll="True" x:Name="NumericUpDown_ScreenBrightMax" Width="74" Background="#FF4B4B4B" HorizontalAlignment="Right" Margin="0,6,34,0" VerticalAlignment="Top" Value="{Binding MaxScreenBright, Mode=TwoWay}" MaxValue="10000000000" TabIndex="1" IsTabStop="True"/>
                <TextBlock TextWrapping="Wrap" Text="%" HorizontalAlignment="Right" Margin="0,12,9,14.163" d:LayoutOverrides="Height"/>
            </Grid>
        </Border>
        <Border Margin="3,110,3,130.5" BorderThickness="1" BorderBrush="#FF5A5A5A">
            <Grid Margin="0">
                <TextBlock x:Name="TextBlock_Segmentation" HorizontalAlignment="Right" Margin="318,34.5,9,0" TextWrapping="Wrap" Text="{Binding Value, ElementName=ScrollBar_SegmentationNum, Mode=TwoWay}" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top"/>
                <TextBlock Margin="5,4.5,75,0" TextWrapping="Wrap" Text="{DynamicResource Lang_Bright_SegmentationAdjust}" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                <TextBlock HorizontalAlignment="Right" Margin="5,34.663,260,0" TextWrapping="Wrap" Text="{DynamicResource Lang_Bright_SegmentationNum}" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top"/>
                <ScrollBar x:Name="ScrollBar_SegmentationNum" Margin="0,-65.5,131,-85.5" Width="19" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" SmallChange="1" Minimum="1" Maximum="20" Value="{Binding SegmentationNum, Mode=TwoWay}" ViewportSize="1" Background="#FF4B4B4B" TabIndex="2">
                    <ScrollBar.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="270"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </ScrollBar.RenderTransform>
                </ScrollBar>
            </Grid>
        </Border>
        <Border Height="51" Margin="3,0,3,60" VerticalAlignment="Bottom" BorderThickness="1" BorderBrush="#FF5A5A5A">
            <Grid Margin="0,0,0,6">
                <TextBlock HorizontalAlignment="Right" Margin="0,13,300,14.163" Width="Auto"  TextWrapping="Wrap" Text="{DynamicResource Lang_Bright_Below}" d:LayoutOverrides="Height"/>
                <Nova_Wpf_Control:NumericUpDown IsSelectedAll="True" x:Name="NumericUpDown_EnvironMentBrightMin" HorizontalAlignment="Left" Margin="85,7,0,0" Width="74" Background="#FF4B4B4B" VerticalAlignment="Top" Value="{Binding MinEnvironmentBright, Mode=TwoWay}" MaxValue="10000000000" TabIndex="3" IsTabStop="True"/>
                <TextBlock Margin="183,11,0,16" TextWrapping="Wrap" Text="Lux      --&gt;" HorizontalAlignment="Left"/>
                <Nova_Wpf_Control:NumericUpDown IsSelectedAll="True" x:Name="NumericUpDown_ScreenBrightMin" HorizontalAlignment="Right" Margin="0,8,29,0" Width="74" Background="#FF4B4B4B" VerticalAlignment="Top" Value="{Binding MinScreenBright, Mode=TwoWay}" MaxValue="10000000000" TabIndex="4" IsTabStop="True"/>
                <TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" Text="%" Margin="0,13,9,14.163" d:LayoutOverrides="Height"/>
            </Grid>
        </Border>
        <Button x:Name="Button_OK" Content="{DynamicResource Lang_Global_OK}" Height="26" Margin="0,0,105,7" VerticalAlignment="Bottom" Width="68" HorizontalAlignment="Right" d:LayoutOverrides="Width" VerticalContentAlignment="Bottom" Command="{Binding CmdOk, Mode=OneWay}" TabIndex="5"/>
        <Button x:Name="Button_Cancel" Content="{DynamicResource Lang_Global_Cancel}" HorizontalAlignment="Right" Margin="0,0,15,6" VerticalAlignment="Bottom" Width="68" Height="26" VerticalContentAlignment="Bottom" Command="{Binding CmdCancel, Mode=OneWay}" TabIndex="6"/>
    </Grid>
</Nova_SmartLCT_Interface:CustomWindow>