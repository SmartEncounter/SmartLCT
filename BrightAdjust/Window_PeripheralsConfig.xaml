<Nova_SmartLCT_Interface:CustomWindow
        xmlns:Nova_SmartLCT_Interface="clr-namespace:Nova.SmartLCT.Interface;assembly=Nova.SmartLCT.Interface.CommonData"                                       
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="Nova.SmartLCT.UI.Window_PeripheralsConfig"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:Nova.SmartLCT.UI" mc:Ignorable="d" 
        Title="{DynamicResource Lang_Bright_PeripheralSettingTitle}" Height="782.667" Width="778" Background="#FF303435" WindowStyle="None">
	<Nova_SmartLCT_Interface:CustomWindow.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ProjectDataSources.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
				<Setter Property="Width" Value="8"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="Cursor" Value="SizeWE"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Thumb}">
							<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="DataGridColumnHeaderStyle_common" TargetType="{x:Type DataGridColumnHeader}">
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
							<Grid>
								<Themes:DataGridHeaderBorder BorderThickness="{TemplateBinding BorderThickness}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" Background="#FF373737" BorderBrush="#FF95F329">
									<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="Center"/>
								</Themes:DataGridHeaderBorder>
								<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" Foreground="Gainsboro" Background="#00414245"/>
								<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" Foreground="Gainsboro" Background="#00414245"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="DataGridCellStyle_common" TargetType="{x:Type DataGridCell}">
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="BorderBrush" Value="Transparent"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridCell}">
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
								<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="IsSelected" Value="True">
						<Setter Property="Background" Value="#FFA0A0A0"/>
						<!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            			<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
					</Trigger>
					<Trigger Property="IsKeyboardFocusWithin" Value="True">
						<!--<Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>-->
					</Trigger>
				</Style.Triggers>
			</Style>
			<Nova_SmartLCT_Interface:WeekList2StringConverter x:Key="WeekList2StringConverter"/>
			<Nova_SmartLCT_Interface:BrightPercentAvailableConverter x:Key="BrightPercentAvailableConverter"/>
			<LinearGradientBrush x:Key="MenuItemSelectionFill" EndPoint="0,1" StartPoint="0,0">
				<GradientStop Color="#34C5EBFF" Offset="0"/>
				<GradientStop Color="#3481D8FF" Offset="1"/>
			</LinearGradientBrush>
			<Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
			<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
				<Grid SnapsToDevicePixels="true">
					<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
					<Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2"/>
					<Grid x:Name="grid">
						<Grid.Background>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#FF818181" Offset="0"/>
								<GradientStop Color="#FF818181" Offset="1"/>
								<GradientStop Color="#FF818181" Offset="0.005"/>
								<GradientStop Color="#FF4F4F4F" Offset="0.01"/>
								<GradientStop Color="#FF818181" Offset="0.995"/>
								<GradientStop Color="#FF4F4F4F" Offset="0.99"/>
							</LinearGradientBrush>
						</Grid.Background>
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
							<ColumnDefinition Width="4"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="37"/>
							<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
							<ColumnDefinition Width="17"/>
						</Grid.ColumnDefinitions>
						<ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
						<Border x:Name="GlyphPanel" BorderBrush="{x:Null}" BorderThickness="0" Background="#E6EFF4" CornerRadius="3" Height="22" Margin="1" Visibility="Hidden" Width="22">
							<Path x:Name="Glyph" Data="{StaticResource Checkmark}" Fill="#0C12A1" FlowDirection="LeftToRight" Height="11" Width="9"/>
						</Border>
						<ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" OpacityMask="Black"/>
						<TextBlock x:Name="textBlock" Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}" Foreground="#FF9D9D9D"/>
					</Grid>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger Property="Icon" Value="{x:Null}">
						<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
					</Trigger>
					<Trigger Property="IsChecked" Value="true">
						<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
						<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
					</Trigger>
					<Trigger Property="IsHighlighted" Value="true">
						<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemSelectionFill}"/>
						<Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
						<Setter Property="Stroke" TargetName="InnerBorder" Value="#40FFFFFF"/>
						<Setter Property="Background" TargetName="grid" Value="#FF6E6E6E"/>
					</Trigger>
					<Trigger Property="IsEnabled" Value="false">
						<Setter Property="Foreground" Value="#FF9D9D9D"/>
						<Setter Property="Background" TargetName="GlyphPanel" Value="#EEE9E9"/>
						<Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#DBD6D6"/>
						<Setter Property="Fill" TargetName="Glyph" Value="#848589"/>
						<Setter Property="Foreground" TargetName="textBlock" Value="#FF9D9D9D"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

			<Style x:Key="MenuItemStyleParent" TargetType="{x:Type MenuItem}">
				<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
				<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
				<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
				<Style.Triggers>
					<Trigger Property="Role" Value="TopLevelHeader">
						<Setter Property="Padding" Value="7,2,8,3"/>
						<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
					</Trigger>
					<Trigger Property="Role" Value="TopLevelItem">
						<Setter Property="Padding" Value="7,2,8,3"/>
						<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
					</Trigger>
					<Trigger Property="Role" Value="SubmenuHeader">
						<Setter Property="Padding" Value="2,3,2,3"/>
						<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
					</Trigger>
					<Trigger Property="Role" Value="SubmenuItem">
						<Setter Property="Padding" Value="2,3,2,3"/>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="DataGridRowStyle_common" TargetType="{x:Type DataGridRow}">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
				<Setter Property="SnapsToDevicePixels" Value="true"/>
				<Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
				<Setter Property="ValidationErrorTemplate">
					<Setter.Value>
						<ControlTemplate>
							<TextBlock Foreground="White" Background="Gray"  Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridRow}">
							<Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="#FF4B4B4B" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
								<SelectiveScrollingGrid>
									<SelectiveScrollingGrid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</SelectiveScrollingGrid.ColumnDefinitions>
									<SelectiveScrollingGrid.RowDefinitions>
										<RowDefinition Height="*"/>
										<RowDefinition Height="Auto"/>
									</SelectiveScrollingGrid.RowDefinitions>
									<DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Stretch"/>
									<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
									<DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Foreground="Gainsboro"/>
								</SelectiveScrollingGrid>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<BooleanToVisibilityConverter x:Key="bool2VisibilityConverter"/>
			<Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
				<Setter Property="Height" Value="8"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="Cursor" Value="SizeNS"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Thumb}">
							<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="DataGridRowHeaderStyle_common" TargetType="{x:Type DataGridRowHeader}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridRowHeader}">
							<Grid Background="#FF414245">
								<Themes:DataGridHeaderBorder BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" BorderBrush="#FF414245">
									<StackPanel Orientation="Horizontal" Background="#FF414245">
										<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
										<Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Foreground="Gainsboro"/>
									</StackPanel>
								</Themes:DataGridHeaderBorder>
								<Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Top" Background="#00414245"/>
								<Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Bottom" Background="#00414245"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
								<Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True">
									<Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="BorderBrush" Value="#FF688CAF"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
				<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
				<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
				<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGrid}">
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
								<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
									<ScrollViewer.Template>
										<ControlTemplate TargetType="{x:Type ScrollViewer}">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto"/>
													<ColumnDefinition Width="*"/>
													<ColumnDefinition Width="Auto"/>
												</Grid.ColumnDefinitions>
												<Grid.RowDefinitions>
													<RowDefinition Height="Auto"/>
													<RowDefinition Height="*"/>
													<RowDefinition Height="Auto"/>
												</Grid.RowDefinitions>
												<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
												<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
												<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
												<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
												<Grid Grid.Column="1" Grid.Row="2">
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
														<ColumnDefinition Width="*"/>
													</Grid.ColumnDefinitions>
													<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
												</Grid>
											</Grid>
										</ControlTemplate>
									</ScrollViewer.Template>
									<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</ScrollViewer>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="IsGrouping" Value="true">
						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="DataGridColumnHeaderStyle_AutoAdjust" TargetType="{x:Type DataGridColumnHeader}">
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
							<Grid>
								<Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" Background="#FF303435">
									<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="Center"/>
								</Themes:DataGridHeaderBorder>
								<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" Foreground="Gainsboro"/>
								<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" Foreground="Gainsboro"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<ControlTemplate x:Key="NumericUpDownControlTemplate">
            <Grid>
                <AdornedElementPlaceholder ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}"/>

                <TextBlock Margin="0,0,0,0" HorizontalAlignment="Right" Width="32" Text="{TemplateBinding ToolTip}" ToolTip="{TemplateBinding ToolTip}" Height="16" VerticalAlignment="Bottom" Foreground="Green"></TextBlock>
            </Grid>
        </ControlTemplate>
			<Style x:Key="DataGridCellStyle_AutoAdjust" TargetType="{x:Type DataGridCell}">
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="BorderBrush" Value="Transparent"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Validation.ErrorTemplate" Value="{StaticResource NumericUpDownControlTemplate}"></Setter>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridCell}">
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
								<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" OpacityMask="Black"/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					 <Trigger Property="Validation.HasError" Value="True">
						<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
					</Trigger>
					<Trigger Property="IsSelected" Value="True">
						<Setter Property="Background" Value="#FFA0A0A0"/>
						<!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
					</Trigger>
					<Trigger Property="IsKeyboardFocusWithin" Value="True">
						<!--<Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="Background" Value="Blue"/>
                    <Setter Property="Foreground" Value="Black"/>-->
					</Trigger>                   
				</Style.Triggers>
			</Style>
			<Style x:Key="TextBoxStyle_Auto" TargetType="{x:Type TextBox}">
				<Setter Property="BorderThickness" Value="0"/>
				<Setter Property="Padding" Value="0"/>
				<Setter Property="Foreground" Value="Gainsboro"/>
				<Setter Property="Background" Value="#FF606060"/>
				<Style.Triggers>
					<Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="Background" Value="Red" />
						<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="DataGridRowStyle_autoadjust" TargetType="{x:Type DataGridRow}">
				<Setter Property="Background" Value="#FF4B4B4B"/>
				<Setter Property="SnapsToDevicePixels" Value="true"/>
				<Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
				<Setter Property="ValidationErrorTemplate">
					<Setter.Value>
						<ControlTemplate>
							<TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center" FontWeight="Bold"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridRow}">
							<Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="#FF4B4B4B">
								<SelectiveScrollingGrid>
									<SelectiveScrollingGrid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</SelectiveScrollingGrid.ColumnDefinitions>
									<SelectiveScrollingGrid.RowDefinitions>
										<RowDefinition Height="*"/>
										<RowDefinition Height="Auto"/>
									</SelectiveScrollingGrid.RowDefinitions>
									<DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
									<DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Background="#FF4B4B4B"/>
								</SelectiveScrollingGrid>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="DataGridRowHeaderStyle_Auto" TargetType="{x:Type DataGridRowHeader}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridRowHeader}">
							<Grid>
								<Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" BorderThickness="1">
									<StackPanel Orientation="Horizontal">
										<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
										<Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
									</StackPanel>
								</Themes:DataGridHeaderBorder>
								<Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Top"/>
								<Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Bottom"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Nova_SmartLCT_Interface:CustomWindow.Resources>
	<Grid DataContext="{Binding Source={StaticResource Window_PeripheralsConfig_VMDataSource}}">
		<GroupBox Header="{DynamicResource Lang_Bright_EnvironmentScreenBrightMap}" Margin="10,15,10,0" Height="461.831" VerticalAlignment="Top" Foreground="Gainsboro">
			<DataGrid Name="grid_brightMapping" Margin="5,15,5,4" Background="#FF414244" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle_AutoAdjust}" Foreground="Gainsboro" CellStyle="{DynamicResource DataGridCellStyle_AutoAdjust}" ColumnHeaderHeight="26" RowHeight="28" ItemsSource="{Binding EnvirAndDisplayBrightCollection}" RowStyle="{DynamicResource DataGridRowStyle_autoadjust}" AutoGenerateColumns="False" TabIndex="3" RowHeaderStyle="{DynamicResource DataGridRowHeaderStyle_Auto}">
				<DataGrid.Columns>

                    <DataGridTextColumn Header="{DynamicResource Lang_Bright_PEnvironmentBright}" Foreground="Gainsboro" Width="187" EditingElementStyle="{StaticResource TextBoxStyle_Auto}" CellStyle="{StaticResource DataGridCellStyle_AutoAdjust}">
                        <DataGridTextColumn.Binding>
                            <Binding Path="EnvironmentBright" Mode="TwoWay" UpdateSourceTrigger="LostFocus" ValidatesOnDataErrors="True">
                                <Binding.ValidationRules>
                                    <local:EnvironmentBrightValidationRule></local:EnvironmentBrightValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Foreground="Gainsboro" Header="{DynamicResource Lang_Bright_PScreenBright}" Width="*" EditingElementStyle="{StaticResource TextBoxStyle_Auto}" CellStyle="{StaticResource DataGridCellStyle_AutoAdjust}">
                        <DataGridTextColumn.Binding>
                            <Binding Path="DisplayBright" Mode="TwoWay" UpdateSourceTrigger="LostFocus" ValidatesOnDataErrors="True">
                                <Binding.ValidationRules>
                                    <local:ScreenBrightValidationRule></local:ScreenBrightValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
				</DataGrid.Columns>
			</DataGrid>
		</GroupBox>
		<GroupBox Margin="10,506.831,10,0" Header="{DynamicResource Lang_Bright_LightSensorSelect}" Height="176.837" VerticalAlignment="Top" Foreground="Gainsboro">
			<Grid Margin="0,10,0,4">
				<DataGrid HorizontalAlignment="Stretch" MinRowHeight="30" IsSynchronizedWithCurrentItem="False" ColumnHeaderHeight="28" ItemsSource="{Binding PeripheralList}" SelectedItem="{Binding SelectedSmartBrightItem, Mode=TwoWay}" CanUserAddRows="False" AutoGenerateColumns="False" Background="#FF414244" BorderBrush="#FF545454" Foreground="Gainsboro" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle_common}" RowStyle="{DynamicResource DataGridRowStyle_common}" RowHeaderStyle="{DynamicResource DataGridRowHeaderStyle_common}" CellStyle="{DynamicResource DataGridCellStyle_common}" Style="{DynamicResource DataGridStyle1}" Margin="5,5,5,13.837" CanUserDeleteRows="False">
					<DataGrid.Columns>
						<DataGridTemplateColumn Header="{DynamicResource Lang_Bright_IsStart}">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
                                    <!--<DataGridCheckBoxColumn Header="{DynamicResource Lang_Bright_IsStart}" Binding="{Binding IsStartUsing, Mode=TwoWay}"/>-->
						<DataGridTextColumn Header="{DynamicResource Lang_Bright_ControlMode}" IsReadOnly="True" Binding="{Binding LocationString}" Width="*"/>
						<DataGridTextColumn Header="{DynamicResource Lang_Bright_PEnvironmentBright}" IsReadOnly="True" Binding="{Binding Location.SensorValue}" Width="185" CanUserResize="false"/>
					</DataGrid.Columns>
					<!--DataGrid.ContextMenu>
						<ContextMenu  Foreground="White" Background="#FF4F4F4F">
							<MenuItem ItemContainerStyle="{DynamicResource MenuItemStyleParent}" Header="{DynamicResource Lang_Bright_Add}" Command="{Binding CmdAddTimingAdjustData}"/>
							<MenuItem ItemContainerStyle="{DynamicResource MenuItemStyleParent}" Header="{DynamicResource Lang_Bright_Edit}" Command="{Binding CmdEditTimingAdjustData}"/>
							<MenuItem Header="{DynamicResource Lang_Bright_Delete}" ItemContainerStyle="{DynamicResource MenuItemStyleParent}" Command="{Binding CmdDeleteSelectedTimingAdjustData}"/>
							<MenuItem Header="{DynamicResource Lang_Bright_ClearList}" ItemContainerStyle="{DynamicResource MenuItemStyleParent}" Command="{Binding CmdClearTimingAdjustData}"/>
						</ContextMenu>
					</DataGrid.ContextMenu-->
				</DataGrid>
			</Grid>
		</GroupBox>
		<Button x:Name="button_ok" HorizontalAlignment="Right" Margin="0,0,114,8.836" VerticalAlignment="Bottom" Width="57" Command="{Binding CmdSetDefalutCurGain, Mode=OneWay}" Height="22" Click="button_ok_Click" Content="{DynamicResource Lang_Global_OK}"/>
		<Button x:Name="button_cancel" HorizontalAlignment="Right" Margin="0,0,43.333,8.836" VerticalAlignment="Bottom" Width="57" Content="{DynamicResource Lang_Global_Cancel}" Height="22" RenderTransformOrigin="1.632,0.485" Click="button_cancel_Click"/>
		<Button x:Name="button_fastSet" HorizontalAlignment="Left" Margin="42,0,0,8.836" VerticalAlignment="Bottom" Width="112.5" Command="{Binding CmdFastSegmentation, Mode=OneWay}" Content="{DynamicResource Lang_Bright_FastSegmentation}" Height="22"/>
	</Grid>
</Nova_SmartLCT_Interface:CustomWindow>
