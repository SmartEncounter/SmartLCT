<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna" x:Name="userControl" x:Class="Nova.Wpf.Control.NumericUpDown"
             xmlns:c="clr-namespace:Nova.Wpf.Control"
             mc:Ignorable="d" 
             d:DesignHeight="24" d:DesignWidth="140" Width="Auto" Style="{DynamicResource MyUserControl}" Background="White" LostFocus="userControl_LostFocus">
	<UserControl.Resources>
        
		<Style x:Key="ButtonFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="3" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="ButtonNormalBackgroundFill" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#FFFFFFFF" Offset="0"/>
			<GradientStop Color="#FFF0F0EA" Offset="0.9"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ButtonBorder" Color="#FF003C74"/>
		<Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ButtonBase}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseOver">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock">
									<EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseOverExit">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock">
									<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
									<SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0.1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Border x:Name="border" Width="Auto" CornerRadius="2" Background="White">
							<Grid>
								<TextBlock x:Name="textBlock" Margin="0" TextWrapping="Wrap" Text="{TemplateBinding Content}" d:LayoutOverrides="Width, Height" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Opacity="0.1" FontSize="9.333"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Trigger.ExitActions>
									<BeginStoryboard x:Name="OnMouseOver_BeginStoryboard1" Storyboard="{StaticResource OnMouseOverExit}"/>
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="OnMouseOver_BeginStoryboard" Storyboard="{StaticResource OnMouseOver}"/>
								</Trigger.EnterActions>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="UpDownRepeatButton" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type RepeatButton}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
		</Style>
		<SolidColorBrush x:Key="ListBorder" Color="#FF7F9DB9"/>
		<Style x:Key="MyTextBox" TargetType="{x:Type TextBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="Padding" Value="2"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Validation.HasError" Value="true">
					<Setter Property="Background" Value="Red"></Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="MyUserControl" TargetType="{x:Type UserControl}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type UserControl}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" CornerRadius="4">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Background" TargetName="border" Value="#FFE0E0E0"/>
								<Setter Property="Foreground" Value="#FFA0A0A0"/>
							</Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsValid}" Value="false">
                                <Setter Property="Background" TargetName="border" Value="Red"></Setter>
							</DataTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
    <Grid>
		<Grid.RowDefinitions>
			<RowDefinition/>
			<RowDefinition/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition/>
			<ColumnDefinition Width="24"/>
		</Grid.ColumnDefinitions>
        <TextBox Margin="0" TextWrapping="Wrap" d:LayoutOverrides="Width, Height" BorderThickness="0" Grid.RowSpan="2" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{Binding Foreground, ElementName=userControl}" MaxLines="1" TextChanged="textBox_value_TextChanged" x:Name="textBox_Value" PreviewKeyDown="textBox_Value_PreviewKeyDown" Style="{DynamicResource MyTextBox}" Text="{Binding Value, ElementName=userControl, FallbackValue=0, Mode=TwoWay}"/>
		<RepeatButton x:Name="button_up" Content="▲" Grid.Column="1" Margin="0,1" d:LayoutOverrides="Width, Height" Style="{DynamicResource UpDownRepeatButton}" Foreground="{Binding Foreground, ElementName=userControl}" Click="button_up_Click"/>
		<RepeatButton x:Name="button_down" Content="▼" Grid.Column="1" Margin="0,1" Grid.Row="1" d:LayoutOverrides="Height" Style="{DynamicResource UpDownRepeatButton}" Click="button_down_Click" />
            
	</Grid>
</UserControl>
