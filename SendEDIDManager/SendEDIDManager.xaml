<localInterface:CustomWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:model="clr-namespace:System.ComponentModel;assembly=WindowsBase" 
        xmlns:local="clr-namespace:Nova.SmartLCT.UI" 
        xmlns:localInterface="clr-namespace:Nova.SmartLCT.Interface;assembly=Nova.SmartLCT.Interface.CommonData"        
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
        mc:Ignorable="d" x:Class="Nova.SmartLCT.UI.SendEDIDManager"
        Title="{DynamicResource Lang_SmartLCT_EDIDManager}" Height="350" Width="366" Background="#FF303435" WindowStyle="None" AllowsTransparency="True" ResizeMode="NoResize">
	<Window.Resources>
		<local:DataGradViewItem x:Key="DataGradViewItemDataSource" d:IsDataSource="True" />
		<local:SendEDIDManager_VM x:Key="SetInfoToHWDataSource" d:IsDataSource="True"/>
		            <CollectionViewSource x:Key="DataView"
                              Source="{Binding SenderDisplayInfoList, Source={StaticResource SetInfoToHWDataSource}}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="SerialPort" />
                </CollectionViewSource.GroupDescriptions>
                <!-- Sort By TotalScore -->
                <CollectionViewSource.SortDescriptions>
                    <model:SortDescription PropertyName="SerialPort" Direction="Ascending" />
                    <model:SortDescription PropertyName="SenderIndex" Direction="Ascending" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
			
			 <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="Black" BorderThickness="1" CornerRadius="3">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">



                                    <GradientStop Color="#FF3995DE" Offset="0"/>
                                    <GradientStop Color="#FF057AD7" Offset="1"/>
                                    <GradientStop Color="#FF057AD7" Offset="0.525"/>
                                    <GradientStop Color="#FF3995DE" Offset="0.495"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF75ECF2" Offset="0"/>
                                            <GradientStop Color="#FF19E0E7" Offset="1"/>
                                            <GradientStop Color="#FF19E0E7" Offset="0.5"/>
                                            <GradientStop Color="#FF75ECF2" Offset="0.495"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		<Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
			<Setter Property="Width" Value="8"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Cursor" Value="SizeWE"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DataGridColumnHeaderStyle_Common" TargetType="{x:Type DataGridColumnHeader}">
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
						<Grid>
							<Microsoft_Windows_Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" Margin="-1,0,1,0" Background="#FF373B3C">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Microsoft_Windows_Themes:DataGridHeaderBorder>
							<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" Foreground="Gainsboro"/>
							<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" Foreground="Gainsboro"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DataGridRowStyle_Common" TargetType="{x:Type DataGridRow}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
			<Setter Property="ValidationErrorTemplate">
				<Setter.Value>
					<ControlTemplate>
						<TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGridRow}">
						<Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="#FF585858">
							<SelectiveScrollingGrid Background="#FF585858">
								<SelectiveScrollingGrid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</SelectiveScrollingGrid.ColumnDefinitions>
								<SelectiveScrollingGrid.RowDefinitions>
									<RowDefinition Height="*"/>
									<RowDefinition Height="Auto"/>
								</SelectiveScrollingGrid.RowDefinitions>
								<DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
								<DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
							</SelectiveScrollingGrid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
    </Window.Resources>

    <Grid DataContext="{StaticResource DataView}" >
        <DataGrid  IsReadOnly="True" AutoGenerateColumns="False" Margin="8,22,14,82" x:Name="myDataGrid" CanUserAddRows="False" ItemsSource="{Binding Mode=OneWay}" Background="#FF414244" BorderBrush="#FF545454" Foreground="Gainsboro" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle_Common}" RowStyle="{DynamicResource DataGridRowStyle_Common}" >
            <DataGrid.Columns>
                <!--<DataGridCheckBoxColumn Width="40" Binding="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->
            	<DataGridTemplateColumn Width="40">
            		<DataGridTemplateColumn.CellTemplate>
            			<DataTemplate>
            				<StackPanel>
            					<CheckBox Margin="0" Foreground="#FFDCDCDC" Width="auto" IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Center"  HorizontalAlignment="Center"/>
            				</StackPanel>
            			</DataTemplate>
            		</DataGridTemplateColumn.CellTemplate>
            	</DataGridTemplateColumn>
            	<DataGridTextColumn Binding="{Binding SenderIndex}" Header="{DynamicResource Lang_SendEDIDManager_SenderIndex}" />
            	<DataGridTextColumn Binding="{Binding Reslution}" Header="{DynamicResource Lang_SendEDIDManager_RectLayer_Reslution}" />
            	<DataGridTextColumn Binding="{Binding RefreshRate}" Header="{DynamicResource Lang_SendEDIDManager_RectLayer_RefreshRate}" Width="*" />
            </DataGrid.Columns>
            <DataGrid.GroupStyle>
            	<GroupStyle>
            		<GroupStyle.HeaderTemplate>
            			<DataTemplate>
            				<StackPanel Orientation="Horizontal">
            					<CheckBox x:Name="checked_box" Margin="10, 0, 0, 0" IsThreeState="True" IsChecked="{Binding Items[0].IsSelectedAll, Mode=TwoWay}" />
            					<TextBlock Background="Green" FontWeight="Bold" Foreground="White" Margin="10, 0, 0, 0" Text="{Binding Name}" />
            				</StackPanel>
            			</DataTemplate>
            		</GroupStyle.HeaderTemplate>
            	</GroupStyle>
            </DataGrid.GroupStyle>
        </DataGrid>
        <Button Content="{DynamicResource Lang_SendEDIDManager_RectLayer_SetEDID}" Height="24" HorizontalAlignment="Right" Margin="0,0,18,21" x:Name="button_SetEDID" VerticalAlignment="Bottom" Width="85" Command="{Binding CmdSetSelectedType, Mode=OneWay}" DataContext="{Binding Source={StaticResource SetInfoToHWDataSource}}" >
        	<Button.Background>
        		<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
        			<LinearGradientBrush.RelativeTransform>
        				<TransformGroup>
        					<ScaleTransform CenterY="0.5" CenterX="0.5"/>
        					<SkewTransform CenterY="0.5" CenterX="0.5"/>
        					<RotateTransform CenterY="0.5" CenterX="0.5"/>
        					<TranslateTransform X="0.508" Y="-0.084"/>
        				</TransformGroup>
        			</LinearGradientBrush.RelativeTransform>
        			<GradientStop Color="#FFF3F3F3" Offset="0"/>
        			<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
        			<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
        			<GradientStop Color="#FFCDCDCD" Offset="1"/>
        		</LinearGradientBrush>
        	</Button.Background>
        </Button>
        <Button Content="{DynamicResource Lang_SendEDIDManager_RectLayer_Refash}" Height="24" HorizontalAlignment="Right" Margin="0,0,18,50" x:Name="button_Refash" VerticalAlignment="Bottom" Width="85" Command="{Binding CmdRefashSelectedType, Mode=OneWay}" DataContext="{Binding Source={StaticResource SetInfoToHWDataSource}}" Click="button_Refash_Click" >
        	<Button.Background>
        		<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
        			<LinearGradientBrush.RelativeTransform>
        				<TransformGroup>
        					<ScaleTransform CenterY="0.5" CenterX="0" ScaleY="1" ScaleX="0.954"/>
        					<SkewTransform AngleY="0" AngleX="0" CenterY="0.5" CenterX="0"/>
        					<RotateTransform Angle="0" CenterY="0.5" CenterX="0"/>
        					<TranslateTransform X="0.527" Y="0.042"/>
        				</TransformGroup>
        			</LinearGradientBrush.RelativeTransform>
        			<GradientStop Color="#FFF3F3F3" Offset="0"/>
        			<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
        			<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
        			<GradientStop Color="#FFCDCDCD" Offset="1"/>
        		</LinearGradientBrush>
        	</Button.Background>
        </Button>
        <TextBox HorizontalAlignment="Left" Margin="87,0,0,52" Text="{Binding Width, Mode=TwoWay}" TextWrapping="Wrap" VerticalAlignment="Bottom" Width="57" DataContext="{Binding Source={StaticResource SetInfoToHWDataSource}}" Background="#FF4B4B4B" Foreground="Gainsboro" BorderBrush="#FF545454" />
        <TextBox HorizontalAlignment="Left" Margin="165,0,0,52" Text="{Binding Height, Mode=TwoWay}" TextWrapping="Wrap" VerticalAlignment="Bottom" Width="60" DataContext="{Binding Source={StaticResource SetInfoToHWDataSource}}" Background="#FF4B4B4B" Foreground="Gainsboro" BorderBrush="#FF545454" />
        <TextBox HorizontalAlignment="Left" Margin="87,0,0,20" Text="{Binding RefreshRate, Mode=TwoWay}" TextWrapping="Wrap" VerticalAlignment="Bottom" Width="57" DataContext="{Binding Source={StaticResource SetInfoToHWDataSource}}" Background="#FF4B4B4B" Foreground="Gainsboro" BorderBrush="#FF545454" />
        <TextBlock HorizontalAlignment="Left" Margin="8,0,0,58" Text="{DynamicResource Lang_SendEDIDManager_RectLayer_ReslutionRate}" TextWrapping="Wrap" VerticalAlignment="Bottom" Foreground="Gainsboro" />
        <TextBlock HorizontalAlignment="Left" Margin="9,0,0,26" Text="{DynamicResource Lang_SendEDIDManager_RectLayer_RefashRate}" TextWrapping="Wrap" VerticalAlignment="Bottom" Foreground="Gainsboro" />
    </Grid>
</localInterface:CustomWindow>
