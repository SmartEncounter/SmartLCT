<localInterface:CustomWindow
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"   
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"   
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:localInterface="clr-namespace:Nova.SmartLCT.Interface;assembly=Nova.SmartLCT.Interface.CommonData"        
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"    
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:local="clr-namespace:SmartLCT"      
    xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"  
    xmlns:Nova_Wpf_Control="clr-namespace:Nova.Wpf.Control;assembly=Nova.Wpf.Control.NumericUpDown" 
    xmlns:Nova_SmartLCT_Behavior="clr-namespace:Nova.SmartLCT.Behavior;assembly=Behavior" 
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
    mc:Ignorable="d"
	x:Class="SmartLCT.Frm_Guide_two"
	x:Name="myWizard"
	Title="{DynamicResource Lang_StartWindow_Wizard}"
	Width="626" Height="460" Foreground="#FF818181" Closed="Window_Closed" SizeToContent="WidthAndHeight" ResizeMode="NoResize" Background="#FF373B3C" AllowsTransparency="True" WindowStyle="None">

	<Window.Resources>
		<localInterface:IsCheckedConvertVisibility x:Key="IsCheckedConvertVisibility2"/>
		<localInterface:IsCheckedConvertVisibility x:Key="IsCheckedConvertVisibility1"/>
		<localInterface:IsCheckedConvertVisibility x:Key="IsCheckedConvertVisibility"/>
		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
		<local:Frm_Guide_two_VM x:Key="Frm_Guide_two_VMDataSource" d:IsDataSource="True"/>
		<local:StartWindow_VM x:Key="StartWindow_VMDataSource" d:IsDataSource="True"/> 
		<localInterface:IsCheckedConvertVisibility x:Key="isCheckedConvertVisibility"/>
        <localInterface:SelectedArrangeTypeConvertIsChecked x:Key="selectedArrangeTypeConvertIsChecked"></localInterface:SelectedArrangeTypeConvertIsChecked>


        <DataTemplate x:Key="DataTemplate_Frm_Guide_Two_SenderType">
			<Grid Width="255">
				<Image Margin="0" HorizontalAlignment="Left" Width="0" Source="{Binding SenderPicturePath, Mode=TwoWay}" Height="0" Visibility="Hidden"/>
				<TextBlock HorizontalAlignment="Stretch" Margin="0" TextWrapping="Wrap" Text="{Binding SenderTypeName, Mode=TwoWay}" d:LayoutOverrides="Height" VerticalAlignment="Center"/>
			</Grid>
		</DataTemplate>
		<SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
		<Style x:Key="CheckRadioFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
       	<Style x:Key="CommonButtonStyle" TargetType="{x:Type Button}">
       		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
       		<Setter Property="Padding" Value="2"/>
       		<Setter Property="BorderThickness" Value="1"/>
       		<Setter Property="Background" Value="Transparent"/>
       		<Setter Property="BorderBrush" Value="Transparent"/>
       		<Setter Property="HorizontalAlignment" Value="Center"/>
       		<Setter Property="VerticalAlignment" Value="Center"/>
       		<Setter Property="HorizontalContentAlignment" Value="Center"/>
       		<Setter Property="VerticalContentAlignment" Value="Center"/>
       		<Setter Property="Template">
       			<Setter.Value>
       				<ControlTemplate TargetType="{x:Type Button}">
       					<Border BorderBrush="Black" BorderThickness="0" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}"/>
       					<ControlTemplate.Triggers>
       						<Trigger Property="IsMouseOver" Value="true"/>
       						<Trigger Property="IsKeyboardFocused" Value="true"/>
       						<Trigger Property="IsPressed" Value="true"/>
       						<Trigger Property="IsEnabled" Value="false">
       							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
       						</Trigger>
       					</ControlTemplate.Triggers>
       				</ControlTemplate>
       			</Setter.Value>
       		</Setter>
		</Style> 
        
		<Style x:Key="RadioButtonStyle_Frm_Guide_Two_LTH" TargetType="{x:Type RadioButton}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="#F4F4F4"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RadioButton}">
						<BulletDecorator Background="Transparent">
							<BulletDecorator.Bullet>
								<Microsoft_Windows_Themes:BulletChrome x:Name="bulletChrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" IsRound="true" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" Width="20" Height="20"/>
							</BulletDecorator.Bullet>
                            <Button Content="Button" Width="50" Style="{DynamicResource CommonButtonStyle}" Height="50" HorizontalAlignment="Stretch" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" IsTabStop="{TemplateBinding IsTabStop}" TabIndex="{TemplateBinding TabIndex}">
                                <Button.ToolTip>
                                    <ToolTip Content="{DynamicResource Lang_PortPropPanel_HorLeftTop}"></ToolTip>
                                </Button.ToolTip>
                                <Button.Background>
                                    <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/L_T_H.png"/>
                                </Button.Background>
                                <i:Interaction.Behaviors>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Disable/L_T_H.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/L_T_H.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Selecte/L_T_H.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                </i:Interaction.Behaviors>
                            </Button>
						</BulletDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
								<Setter Property="Padding" Value="4,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RadioButtonStyle_Frm_Guide_Two_RTH" TargetType="{x:Type RadioButton}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="#F4F4F4"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RadioButton}">
						<BulletDecorator Background="Transparent">
							<BulletDecorator.Bullet>
								<Microsoft_Windows_Themes:BulletChrome BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" IsRound="true" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" Width="20" Height="20"/>
							</BulletDecorator.Bullet>
                            <Button Content="Button" Width="50" Style="{DynamicResource CommonButtonStyle}" Height="50"  Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}">
                                <Button.ToolTip>
                                    <ToolTip Content="{DynamicResource Lang_PortPropPanel_HorRightTop}"></ToolTip>
                                </Button.ToolTip>
                                <Button.Background>
                                    <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/R_T_H.png"/>
                                </Button.Background>
                                <i:Interaction.Behaviors>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Disable/R_T_H.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/R_T_H.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Selecte/R_T_H.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                </i:Interaction.Behaviors>
                            </Button>
						</BulletDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
								<Setter Property="Padding" Value="4,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RadioButtonStyle_Frm_Guide_Two_LBH" TargetType="{x:Type RadioButton}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="#F4F4F4"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RadioButton}">
						<BulletDecorator Background="Transparent">
							<BulletDecorator.Bullet>
								<Microsoft_Windows_Themes:BulletChrome BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" IsRound="true" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" Width="20" Height="20"/>
							</BulletDecorator.Bullet>
                            <Button Content="Button" Style="{DynamicResource CommonButtonStyle}" Width="50" Height="50"  Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}">
                                <Button.ToolTip>
                                    <ToolTip Content="{DynamicResource Lang_PortPropPanel_HorLeftBottom}"></ToolTip>
                                </Button.ToolTip>
                                <Button.Background>
                                    <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/L_B_H.png"/>
                                </Button.Background>
                                <i:Interaction.Behaviors>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Disable/L_B_H.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/L_B_H.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Selecte/L_B_H.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                </i:Interaction.Behaviors>
                            </Button>
						</BulletDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
								<Setter Property="Padding" Value="4,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RadioButtonStyle_Frm_Guide_Two_RBH" TargetType="{x:Type RadioButton}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="#F4F4F4"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RadioButton}">
						<BulletDecorator Background="Transparent">
							<BulletDecorator.Bullet>
								<Microsoft_Windows_Themes:BulletChrome BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" IsRound="true" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" Width="20" Height="20"/>
							</BulletDecorator.Bullet>
                            <Button Content="Button" Width="50" Style="{DynamicResource CommonButtonStyle}" Height="50"  Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}">
                                <Button.ToolTip>
                                    <ToolTip Content="{DynamicResource Lang_PortPropPanel_HorRightBottom}"></ToolTip>
                                </Button.ToolTip>
                                <Button.Background>
                                    <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/R_B_H.png"/>
                                </Button.Background>
                                <i:Interaction.Behaviors>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Disable/R_B_H.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/R_B_H.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Selecte/R_B_H.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                </i:Interaction.Behaviors>
                            </Button>
                        </BulletDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
								<Setter Property="Padding" Value="4,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RadioButtonStyle_Frm_Guide_Two_LTV" TargetType="{x:Type RadioButton}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="#F4F4F4"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RadioButton}">
						<BulletDecorator Background="Transparent">
							<BulletDecorator.Bullet>
								<Microsoft_Windows_Themes:BulletChrome BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" IsRound="true" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" Width="20" Height="20"/>
							</BulletDecorator.Bullet>
                            <Button Content="Button" Width="50" Style="{DynamicResource CommonButtonStyle}" Height="50"  Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}">
                                <Button.ToolTip>
                                    <ToolTip Content="{DynamicResource Lang_PortPropPanel_VerLeftTop}"></ToolTip>
                                </Button.ToolTip>

                                <Button.Background>
                                    <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/L_T_V.png"/>
                                </Button.Background>
                                <i:Interaction.Behaviors>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Disable/L_T_V.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/L_T_V.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Selecte/L_T_V.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                </i:Interaction.Behaviors>
                            </Button>
                        </BulletDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
								<Setter Property="Padding" Value="4,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RadioButtonStyle_Frm_Guide_Two_RTV" TargetType="{x:Type RadioButton}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="#F4F4F4"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RadioButton}">
						<BulletDecorator Background="Transparent">
							<BulletDecorator.Bullet>
								<Microsoft_Windows_Themes:BulletChrome BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" IsRound="true" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" Width="20" Height="20"/>
							</BulletDecorator.Bullet>
                            <Button Content="Button" Width="50" Style="{DynamicResource CommonButtonStyle}" Height="50"  Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}">
                                <Button.ToolTip>
                                    <ToolTip Content="{DynamicResource Lang_PortPropPanel_VerRightTop}"></ToolTip>
                                </Button.ToolTip>
                                <Button.Background>
                                    <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/R_T_V.png"/>
                                </Button.Background>
                                <i:Interaction.Behaviors>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Disable/R_T_V.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/R_T_V.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Selecte/R_T_V.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                </i:Interaction.Behaviors>
                            </Button>
                        </BulletDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
								<Setter Property="Padding" Value="4,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RadioButtonStyle_Frm_Guide_Two_LBV" TargetType="{x:Type RadioButton}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="#F4F4F4"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RadioButton}">
						<BulletDecorator Background="Transparent">
							<BulletDecorator.Bullet>
								<Microsoft_Windows_Themes:BulletChrome BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" IsRound="true" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" Width="20" Height="20"/>
							</BulletDecorator.Bullet>
                            <Button Content="Button" Style="{DynamicResource CommonButtonStyle}" Width="50" Height="50"  Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}">
                                <Button.ToolTip>
                                    <ToolTip Content="{DynamicResource Lang_PortPropPanel_VerLeftBottom}"></ToolTip>
                                </Button.ToolTip>
                                <Button.Background>
                                    <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/L_B_V.png"/>
                                </Button.Background>
                                <i:Interaction.Behaviors>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Disable/L_B_V.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/L_B_V.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Selecte/L_B_V.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                </i:Interaction.Behaviors>
                            </Button>
                        </BulletDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
								<Setter Property="Padding" Value="4,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RadioButtonStyle_Frm_Guide_Two_RBV" TargetType="{x:Type RadioButton}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="#F4F4F4"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RadioButton}">
						<BulletDecorator Background="Transparent">
							<BulletDecorator.Bullet>
								<Microsoft_Windows_Themes:BulletChrome BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" IsRound="true" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" Width="20" Height="20"/>
							</BulletDecorator.Bullet>
                            <Button Content="Button" Width="50"   Style="{DynamicResource CommonButtonStyle}" Height="50"  Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}">
                                <Button.ToolTip>
                                    <ToolTip Content="{DynamicResource Lang_PortPropPanel_VerRightBottom}"></ToolTip>
                                </Button.ToolTip>
                                <Button.Background>
                                    <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/R_B_V.png"/>
                                </Button.Background>
                                <i:Interaction.Behaviors>
                                    <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Disable/R_B_V.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.DisableImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/R_B_V.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.NormalImage>
                                        <Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                            <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Selecte/R_B_V.png"/>
                                        </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior.MouseOverImage>
                                    </Nova_SmartLCT_Behavior:ButtonStatePictureBehavior>
                                </i:Interaction.Behaviors>
                            </Button>
                        </BulletDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
								<Setter Property="Padding" Value="4,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

        <Style x:Key="Custom_Tabtitle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border BorderThickness="1" Margin="0,10,0,0" HorizontalAlignment="Left" Width="80" d:LayoutOverrides="HorizontalAlignment">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF64676C" Offset="0"/>
                                        <GradientStop Color="#FF595959" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border BorderThickness="1" Height="30" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" CornerRadius="5" HorizontalAlignment="Left" Width="70" d:LayoutOverrides="HorizontalAlignment">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF64676C" Offset="0"/>
                                        <GradientStop Color="#FF595959" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border BorderThickness="1" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="83" CornerRadius="5" d:LayoutOverrides="HorizontalAlignment">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF64676C" Offset="0"/>
                                        <GradientStop Color="#FF595959" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform AngleX="45"/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Border.LayoutTransform>
                            </Border>
                            <Canvas Height="3" Margin="2,0,0,0" VerticalAlignment="Bottom" Background="#FF595959"/>
                            <ContentPresenter HorizontalAlignment="Left" Margin="12,3.883,0,5" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Width="64" d:LayoutOverrides="Height"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#FFC8C8C8"/>
        </Style>
        <Style x:Key="ButtonStyle_GuideTwo_RowAndCol" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid>
        					<Border BorderThickness="1" Margin="0,10,0,0" HorizontalAlignment="Left" Width="80" d:LayoutOverrides="HorizontalAlignment">
        						<Border.Background>
        							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        								<GradientStop Color="#FF64676C" Offset="0"/>
        								<GradientStop Color="#FF595959" Offset="1"/>
        							</LinearGradientBrush>
        						</Border.Background>
        					</Border>
        					<Border BorderThickness="1" Height="30" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" CornerRadius="5" HorizontalAlignment="Left" Width="70" d:LayoutOverrides="HorizontalAlignment">
        						<Border.Background>
        							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        								<GradientStop Color="#FF64676C" Offset="0"/>
        								<GradientStop Color="#FF595959" Offset="1"/>
        							</LinearGradientBrush>
        						</Border.Background>
        					</Border>
        					<Border BorderThickness="1" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="92" CornerRadius="5" d:LayoutOverrides="HorizontalAlignment">
        						<Border.Background>
        							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        								<GradientStop Color="#FF64676C" Offset="0"/>
        								<GradientStop Color="#FF595959" Offset="1"/>
        							</LinearGradientBrush>
        						</Border.Background>
        						<Border.LayoutTransform>
        							<TransformGroup>
        								<ScaleTransform/>
        								<SkewTransform AngleX="45"/>
        								<RotateTransform/>
        								<TranslateTransform/>
        							</TransformGroup>
        						</Border.LayoutTransform>
        					</Border>
        					<Canvas Height="3" Margin="2,0,0,0" VerticalAlignment="Bottom" Background="#FF595959"/>
        					<ContentPresenter HorizontalAlignment="Left" Margin="11.991,4.239,0,4.643" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Width="80.936" d:LayoutOverrides="Height" RenderTransformOrigin="0.5,0.5"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True"/>
        					<Trigger Property="IsPressed" Value="True"/>
        					<Trigger Property="IsEnabled" Value="False"/>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Setter Property="FontSize" Value="14"/>
        	<Setter Property="Foreground" Value="#FFC8C8C8"/>
        </Style>
        <Style x:Key="ComboBoxFocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        	<GradientStop Color="#F3F3F3" Offset="0"/>
        	<GradientStop Color="#EBEBEB" Offset="0.5"/>
        	<GradientStop Color="#DDDDDD" Offset="0.5"/>
        	<GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
        <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Focusable" Value="false"/>
        	<Setter Property="ClickMode" Value="Press"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        					<Grid Width="Auto" Background="{TemplateBinding Background}">
        					<Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Background="{TemplateBinding Background}">
        						<Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center"/>
        					</Grid>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
        	<GradientStop Color="#ABADB3" Offset="0.05"/>
        	<GradientStop Color="#E2E3EA" Offset="0.07"/>
        	<GradientStop Color="#E3E9EF" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="AllowDrop" Value="true"/>
        	<Setter Property="MinWidth" Value="0"/>
        	<Setter Property="MinHeight" Value="0"/>
        	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type TextBox}">
        				<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ComboBoxToggleButton2" TargetType="{x:Type ToggleButton}">
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Focusable" Value="false"/>
        	<Setter Property="ClickMode" Value="Press"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="false" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
        					<Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
        				</Microsoft_Windows_Themes:ButtonChrome>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsChecked" Value="true">
        						<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        	<Grid x:Name="Placement" SnapsToDevicePixels="true">
        		<Grid.ColumnDefinitions>
        			<ColumnDefinition Width="*"/>
        			<ColumnDefinition Width="Auto"/>
        		</Grid.ColumnDefinitions>
        		<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
        			<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
        				<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
        					<ScrollViewer x:Name="DropDownScrollViewer">
        						<Grid RenderOptions.ClearTypeHint="Enabled">
        							<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
        								<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
        							</Canvas>
        							<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        						</Grid>
        					</ScrollViewer>
        				</Border>
        			</Microsoft_Windows_Themes:SystemDropShadowChrome>
        		</Popup>
        		<Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
        		<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
        		<ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton2}"/>
        	</Grid>
        	<ControlTemplate.Triggers>
        		<Trigger Property="IsKeyboardFocusWithin" Value="true">
        			<Setter Property="Foreground" Value="Black"/>
        		</Trigger>
        		<Trigger Property="IsDropDownOpen" Value="true">
        			<Setter Property="RenderFocused" TargetName="Border" Value="true"/>
        		</Trigger>
        		<Trigger Property="HasItems" Value="false">
        			<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
        		</Trigger>
        		<Trigger Property="IsEnabled" Value="false">
        			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        			<Setter Property="Background" Value="#FFF4F4F4"/>
        		</Trigger>
        		<Trigger Property="IsGrouping" Value="true">
        			<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        		</Trigger>
        		<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        			<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
        			<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
        		</Trigger>
        		<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
        			<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
        			<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
        		</Trigger>
        	</ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle_GuideTwo" TargetType="{x:Type ComboBox}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="Padding" Value="4,3"/>
        	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ComboBox}">
        				<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
        					<Grid.ColumnDefinitions>
        						<ColumnDefinition Width="*"/>
        						<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        					</Grid.ColumnDefinitions>
        					<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
        						<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
        							<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
        								<ScrollViewer x:Name="DropDownScrollViewer">
        									<Grid RenderOptions.ClearTypeHint="Enabled">
        										<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
        											<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
        										</Canvas>
        										<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        									</Grid>
        								</ScrollViewer>
        							</Border>
        						</Microsoft_Windows_Themes:SystemDropShadowChrome>
        					</Popup>
        					<ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}" Foreground="Gainsboro"/>
        					<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        						<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
        						<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
        					</Trigger>
        					<Trigger Property="HasItems" Value="false">
        						<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        						<Setter Property="Background" Value="#FFF4F4F4"/>
        					</Trigger>
        					<Trigger Property="IsGrouping" Value="true">
        						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        					</Trigger>
        					<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
        						<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
        						<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Style.Triggers>
        		<Trigger Property="IsEditable" Value="true">
        			<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        			<Setter Property="IsTabStop" Value="false"/>
        			<Setter Property="Padding" Value="3"/>
        			<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
        		</Trigger>
        	</Style.Triggers>
        </Style>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate_Combox_GuideTwo_sender">
        	<StackPanel IsItemsHost="True" Background="#FF4B4B4B"/>
        </ItemsPanelTemplate>
        <Style x:Key="ComboBoxItemStyle_GuideTwo_Sender" TargetType="{x:Type ComboBoxItem}">
        	<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="Padding" Value="3,0,3,0"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ComboBoxItem}">
        				<Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Width="255">
        					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsHighlighted" Value="true">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
        						<Setter Property="Background" TargetName="Bd" Value="#FF373B3C"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <DataTemplate x:Key="DataTemplate_GudieTwoReceiveSize">
        	<Grid Width="255">
        		<Image Margin="0" HorizontalAlignment="Left" Width="26" Source="{Binding SenderPicturePath, Mode=TwoWay}"/>
        		<TextBlock HorizontalAlignment="Stretch" Margin="37.853,0,0,0" TextWrapping="Wrap" Text="{Binding SenderTypeName, Mode=TwoWay}" d:LayoutOverrides="Height" VerticalAlignment="Center" Foreground="#FFE42727"/>
        	</Grid>
        </DataTemplate>
        <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
        	<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="Padding" Value="3,0,3,0"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ComboBoxItem}">
        				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
        					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsHighlighted" Value="true">
        						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate_GuideTwoReceiveSize">
        	<StackPanel IsItemsHost="True" Background="#FF4B4B4B"/>
        </ItemsPanelTemplate>
        <DataTemplate x:Key="DataTemplate_GuideTwoReceiveSize">
        	<Grid Width="Auto"/>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate_GuideTwo_ReceiveSize">
        	<StackPanel IsItemsHost="True" Background="#FF4B4B4B"/>
        </ItemsPanelTemplate>
        <Style x:Key="ComboBoxItemStyle_GuideTwo_ReceiveSize" TargetType="{x:Type ComboBoxItem}">
        	<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="Padding" Value="3,0,3,0"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ComboBoxItem}">
        				<Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Width="Auto">
        					<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsHighlighted" Value="true">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
        						<!--<Setter Property="Width" TargetName="Bd" Value="255"/>-->
        						<Setter Property="Background" TargetName="Bd" Value="#FF373B3C"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <DataTemplate x:Key="DataTemplate_GuideTwo_ReceiveSize">
            <Grid Width="Auto">
        		<TextBlock Margin="0.5" TextWrapping="Wrap" Text="{Binding DisplayName}" d:LayoutOverrides="Width, Height" Foreground="Gainsboro" Padding="0"/>
        	</Grid>
        </DataTemplate>
		      <DataTemplate x:Key="DataTemplate_GuideTwo_SenderCard">
            <Grid Width="Auto">
		      		<TextBlock Margin="0.5" TextWrapping="Wrap" Text="{Binding SenderTypeName, Mode=TwoWay}" d:LayoutOverrides="Width, Height" Foreground="Gainsboro" Padding="0"/>
		      	</Grid>
        </DataTemplate>
        <Style x:Key="ButtonFocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border x:Name="border" BorderBrush="Black" BorderThickness="1" CornerRadius="3">
        					<Border.Background>
        						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        						
									
									
										<GradientStop Color="#FF3995DE" Offset="0"/>
        									<GradientStop Color="#FF057AD7" Offset="1"/>
        									<GradientStop Color="#FF057AD7" Offset="0.525"/>
        									<GradientStop Color="#FF3995DE" Offset="0.495"/>
        						</LinearGradientBrush>
        					</Border.Background>
        					<TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsMouseOver" Value="True">
        						<Setter Property="Background" TargetName="border">
        							<Setter.Value>
        								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        								<GradientStop Color="#FF75ECF2" Offset="0"/>
        							<GradientStop Color="#FF19E0E7" Offset="1"/>
        							<GradientStop Color="#FF19E0E7" Offset="0.5"/>
        							<GradientStop Color="#FF75ECF2" Offset="0.495"/>
        								</LinearGradientBrush>
        							</Setter.Value>
        						</Setter>
        					</Trigger>
        					<Trigger Property="IsKeyboardFocused" Value="true"/>
        					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="#ADADAD"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ButtonStyle_ConnectLineStyle" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid>
        					<Border BorderThickness="1" Margin="0,10,0,0" HorizontalAlignment="Left" Width="80" d:LayoutOverrides="HorizontalAlignment">
        						<Border.Background>
        							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        								<GradientStop Color="#FF64676C" Offset="0"/>
        								<GradientStop Color="#FF595959" Offset="1"/>
        							</LinearGradientBrush>
        						</Border.Background>
        					</Border>
        					<Border BorderThickness="1" Height="30" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" CornerRadius="5" HorizontalAlignment="Left" Width="70" d:LayoutOverrides="HorizontalAlignment">
        						<Border.Background>
        							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        								<GradientStop Color="#FF64676C" Offset="0"/>
        								<GradientStop Color="#FF595959" Offset="1"/>
        							</LinearGradientBrush>
        						</Border.Background>
        					</Border>
        					<Border BorderThickness="1" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="110" CornerRadius="5" d:LayoutOverrides="HorizontalAlignment">
        						<Border.Background>
        							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        								<GradientStop Color="#FF64676C" Offset="0"/>
        								<GradientStop Color="#FF595959" Offset="1"/>
        							</LinearGradientBrush>
        						</Border.Background>
        						<Border.LayoutTransform>
        							<TransformGroup>
        								<ScaleTransform/>
        								<SkewTransform AngleX="45"/>
        								<RotateTransform/>
        								<TranslateTransform/>
        							</TransformGroup>
        						</Border.LayoutTransform>
        					</Border>
        					<Canvas Height="3" Margin="2,0,0,0" VerticalAlignment="Bottom" Background="#FF595959"/>
        					<ContentPresenter HorizontalAlignment="Left" Margin="12,3.883,0,5" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Width="Auto" d:LayoutOverrides="Height"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True"/>
        					<Trigger Property="IsPressed" Value="True"/>
        					<Trigger Property="IsEnabled" Value="False"/>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Setter Property="FontSize" Value="14"/>
        	<Setter Property="Foreground" Value="#FFC8C8C8"/>
        </Style>

    </Window.Resources>

	<Grid x:Name="LayoutRoot" DataContext="{Binding Source={StaticResource Frm_Guide_two_VMDataSource}}">
		<Grid Background="#FF373B3C" Margin="0" Width="620">
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition Height="19.5*"/>
				<RowDefinition Height="2.5*"/>
			</Grid.RowDefinitions>
			<Grid Margin="0">
                <CheckBox x:Name="CheckBox_CreateEmptyProject" IsChecked="{Binding IsCreateEmptyProject, Mode=TwoWay}"  Content="{DynamicResource Lang_Frm_Guide_two_NewProject}" HorizontalAlignment="Left" Margin="29,5,0,0" Foreground="Gainsboro" VerticalAlignment="Top" TabIndex="1"/>
			</Grid>
            <Grid x:Name="grid" Grid.Row="1" d:LayoutOverrides="VerticalMargin" Visibility="{Binding IsChecked, Converter={StaticResource IsCheckedConvertVisibility2}, ElementName=CheckBox_CreateEmptyProject, Mode=OneWay}">
            	<Grid.RowDefinitions>
            		<RowDefinition Height="3*"/>
            		<RowDefinition Height="2*"/>
            		<RowDefinition Height="3.5*"/>
            	</Grid.RowDefinitions>
				<Grid Margin="0">
                    <Button x:Name="button_ImportReceiveSize" Command="{Binding CmdShowScanBoardConfigManager}"  Content="{DynamicResource Lang_Frm_Guide_two_Import}" HorizontalAlignment="Right" Margin="0,72.049,50,0" RenderTransformOrigin="-0.081,0.536" Width="72" TabIndex="4" VerticalAlignment="Top" Height="25"/>
					<Label Content="{DynamicResource Lang_Global_SendingBoard}" Foreground="Gainsboro" RenderTransformOrigin="0.362,1.103" Margin="0,31,411,90.662" HorizontalAlignment="Right"/>
					<Label Content="{DynamicResource Lang_Frm_Guide_two_CabinetSize}" HorizontalAlignment="Right" Foreground="Gainsboro" Margin="0,73,411,0" VerticalAlignment="Top"/>
                    <ComboBox x:Name="ComboBox_SenderType" Margin="222,28.418,0,0" ItemsSource="{Binding SenderConfigCollection, Mode=TwoWay}" SelectedItem="{Binding SelectedSenderConfigInfo, Mode=TwoWay}" BorderThickness="0.5" Foreground="Gainsboro" ItemsPanel="{DynamicResource ItemsPanelTemplate_GuideTwo_ReceiveSize}" ItemContainerStyle="{DynamicResource ComboBoxItemStyle_GuideTwo_ReceiveSize}" ItemTemplate="{DynamicResource DataTemplate_GuideTwo_SenderCard}" Style="{DynamicResource ComboBoxStyle_GuideTwo}" Width="270" HorizontalAlignment="Left" TabIndex="2" VerticalAlignment="Top" d:LayoutOverrides="VerticalAlignment">
                    	<ComboBox.Background>
                    		<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    			<GradientStop Color="#FF616161"/>
                    			<GradientStop Color="#FF585858" Offset="1"/>
                    			<GradientStop Color="#FF616161" Offset="0.495"/>
                    			<GradientStop Color="#FF585858" Offset="0.5"/>
                    		</LinearGradientBrush>
                    	</ComboBox.Background>
                    </ComboBox>
                    <ComboBox x:Name="ComboBox_ReceiveSize" Margin="222,73.661,0,0" ItemsSource="{Binding ScannerCofigCollection, Mode=TwoWay}" SelectedItem="{Binding SelectedScannerConfigInfo, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Foreground="Gainsboro" ItemsPanel="{DynamicResource ItemsPanelTemplate_GuideTwo_ReceiveSize}" ItemContainerStyle="{DynamicResource ComboBoxItemStyle_GuideTwo_ReceiveSize}" ItemTemplate="{DynamicResource DataTemplate_GuideTwo_ReceiveSize}" Style="{DynamicResource ComboBoxStyle_GuideTwo}" Width="270" HorizontalAlignment="Left" TabIndex="3" VerticalAlignment="Top">
                    	<ComboBox.Background>
                    		<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    			<GradientStop Color="#FF616161" Offset="0"/>
                    			<GradientStop Color="#FF585858" Offset="1"/>
                    			<GradientStop Color="#FF616161" Offset="0.495"/>
                    			<GradientStop Color="#FF585858" Offset="0.5"/>
                    		</LinearGradientBrush>
                    	</ComboBox.Background>
                    	<i:Interaction.Triggers>
                    		<i:EventTrigger EventName="DropDownClosed">
                    			<Nova_SmartLCT_Behavior:NotifyControlEvent Command="{Binding CmdCustomSizeDropDownClosed, Mode=OneWay}"/>
                    		</i:EventTrigger>
                    	</i:Interaction.Triggers>
                    </ComboBox>
                    <Label Content="1" HorizontalAlignment="Left" Margin="33,19.391,0,0" Foreground="#FFB4B4B4" FontSize="48" VerticalAlignment="Top" Height="69" Background="#0001DBDB"/>
                    <Rectangle Fill="#FF595959" Height="3" Margin="20,128,20,0" VerticalAlignment="Top"/>
				</Grid>
				<Grid Margin="0" Grid.Row="1">
					<Label HorizontalAlignment="Right" Foreground="Gainsboro" Margin="0,28,411,0" Content="{DynamicResource Lang_Frm_Guide_two_Rows}" VerticalAlignment="Top" d:LayoutOverrides="VerticalAlignment"/>
					<Label Content="{DynamicResource Lang_Frm_Guide_two_Cols}" Foreground="Gainsboro" Margin="0,28,219,0" HorizontalAlignment="Right" VerticalAlignment="Top" d:LayoutOverrides="VerticalAlignment"/>
                    <Nova_Wpf_Control:NumericUpDown IsSelectedAll="True" Foreground="Gainsboro" MinValue="1"  x:Name="numericUpDown_Row" Value="{Binding Rows, Mode=TwoWay}"  Margin="222,28,0,0" HorizontalAlignment="Left" Width="80" Height="25" TabIndex="5" VerticalAlignment="Top" IsTabStop="True">
						<Nova_Wpf_Control:NumericUpDown.Background>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#FF616161" Offset="0"/>
								<GradientStop Color="#FF585858" Offset="1"/>
								<GradientStop Color="#FF616161" Offset="0.495"/>
								<GradientStop Color="#FE585858" Offset="0.5"/>
							</LinearGradientBrush>
						</Nova_Wpf_Control:NumericUpDown.Background>
					</Nova_Wpf_Control:NumericUpDown>
                    <Nova_Wpf_Control:NumericUpDown IsSelectedAll="True" Foreground="Gainsboro" MinValue="1"  x:Name="numericUpDown_Cols" Value="{Binding Cols, Mode=TwoWay}"  HorizontalAlignment="Right" Margin="0,28,128.963,0" Height="25" Width="80" d:LayoutOverrides="HorizontalAlignment" TabIndex="6" VerticalAlignment="Top" IsTabStop="True">
						<Nova_Wpf_Control:NumericUpDown.Background>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#FF616161" Offset="0"/>
								<GradientStop Color="#FF585858" Offset="1"/>
								<GradientStop Color="#FF61616C" Offset="0.495"/>
								<GradientStop Color="#FF585858" Offset="0.5"/>
							</LinearGradientBrush>
						</Nova_Wpf_Control:NumericUpDown.Background>
					</Nova_Wpf_Control:NumericUpDown>
					<Label Content="2" HorizontalAlignment="Left" Margin="33,-0.927,0,20.274" Foreground="#FFB4B4B4" FontSize="48" Background="#0001DBDB"/>
					<Rectangle Fill="#FF595959" Height="3" Margin="17,90,23,-396.297" VerticalAlignment="Top"/>
				</Grid>
				<Grid Margin="0" Grid.Row="2">
                    <RadioButton x:Name="RadioButton_LTH" IsChecked="{Binding SelectedArrangeType,Converter={StaticResource selectedArrangeTypeConvertIsChecked},ConverterParameter=LeftTop_Hor,Mode=OneWay}"  Command="{Binding CmdArrangeScanner, Mode=OneWay}" CommandParameter="LeftTop_Hor"  Content="RadioButton" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="349,32,0,0" Style="{DynamicResource RadioButtonStyle_Frm_Guide_Two_LTH}" TabIndex="7" d:LayoutOverrides="VerticalAlignment"/>
                    <RadioButton x:Name="RadioButton_RBH" IsChecked="{Binding SelectedArrangeType,Converter={StaticResource selectedArrangeTypeConvertIsChecked},ConverterParameter=RightBottom_Hor,Mode=OneWay}"  Command="{Binding CmdArrangeScanner, Mode=OneWay}" CommandParameter="RightBottom_Hor" Content="RadioButton" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="234,32,0,0" Style="{DynamicResource RadioButtonStyle_Frm_Guide_Two_RBH}" TabIndex="10" d:LayoutOverrides="VerticalAlignment"/>
                    <RadioButton x:Name="RadioButton_LBV" IsChecked="{Binding SelectedArrangeType,Converter={StaticResource selectedArrangeTypeConvertIsChecked},ConverterParameter=LeftBottom_Ver,Mode=OneWay}"  Command="{Binding CmdArrangeScanner, Mode=OneWay}" CommandParameter="LeftBottom_Ver" Content="RadioButton" VerticalAlignment="Top" Margin="349,97,0,0" Style="{DynamicResource RadioButtonStyle_Frm_Guide_Two_LBV}" HorizontalAlignment="Left" TabIndex="13"/>
                    <RadioButton x:Name="RadioButton_LBH" IsChecked="{Binding SelectedArrangeType,Converter={StaticResource selectedArrangeTypeConvertIsChecked},ConverterParameter=LeftBottom_Hor,Mode=OneWay}"  Command="{Binding CmdArrangeScanner, Mode=OneWay}" CommandParameter="LeftBottom_Hor" Content="RadioButton" VerticalAlignment="Top" Margin="119,32,0,0" Style="{DynamicResource RadioButtonStyle_Frm_Guide_Two_LBH}" HorizontalAlignment="Left" TabIndex="9" d:LayoutOverrides="VerticalAlignment"/>
                    <RadioButton x:Name="RadioButton_RTV" IsChecked="{Binding SelectedArrangeType,Converter={StaticResource selectedArrangeTypeConvertIsChecked},ConverterParameter=RightTop_Ver,Mode=OneWay}"  Command="{Binding CmdArrangeScanner, Mode=OneWay}" CommandParameter="RightTop_Ver" Content="RadioButton" VerticalAlignment="Top" Margin="234,97,0,0" Style="{DynamicResource RadioButtonStyle_Frm_Guide_Two_RTV}" TabIndex="12" HorizontalAlignment="Left"/>
                    <RadioButton x:Name="RadioButton_RTH" IsChecked="{Binding SelectedArrangeType,Converter={StaticResource selectedArrangeTypeConvertIsChecked},ConverterParameter=RightTop_Hor,Mode=OneWay}"  Command="{Binding CmdArrangeScanner, Mode=OneWay}" CommandParameter="RightTop_Hor" Content="RadioButton" VerticalAlignment="Top" Margin="464,32,0,0" Style="{DynamicResource RadioButtonStyle_Frm_Guide_Two_RTH}" TabIndex="8" HorizontalAlignment="Left" d:LayoutOverrides="VerticalAlignment"/>
                    <RadioButton x:Name="RadioButton_LTV" IsChecked="{Binding SelectedArrangeType,Converter={StaticResource selectedArrangeTypeConvertIsChecked},ConverterParameter=LeftTop_Ver,Mode=OneWay}"  Command="{Binding CmdArrangeScanner, Mode=OneWay}" CommandParameter="LeftTop_Ver" Content="RadioButton" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="119,97,0,0" Style="{DynamicResource RadioButtonStyle_Frm_Guide_Two_LTV}" TabIndex="11"/>
                    <RadioButton x:Name="RadioButton_RBV" IsChecked="{Binding SelectedArrangeType,Converter={StaticResource selectedArrangeTypeConvertIsChecked},ConverterParameter=RightBottom_Ver,Mode=OneWay}"   Command="{Binding CmdArrangeScanner, Mode=OneWay}" CommandParameter="RightBottom_Ver" Content="RadioButton" HorizontalAlignment="Left" Margin="464,97,0,0" VerticalAlignment="Top" Style="{DynamicResource RadioButtonStyle_Frm_Guide_Two_RBV}" TabIndex="14"/>
                    <Label Content="3" HorizontalAlignment="Left" Margin="33,35.726,0,60.131" Foreground="#FFB4B4B4" FontSize="48" Width="42.15" Background="#0001DBDB"/>
				</Grid>
			</Grid>
            <Grid Margin="0" Grid.Row="2">
            	<Button x:Name="button_create" Content="{DynamicResource Lang_Frm_Guide_two_Create}" Command="{Binding CmdCreate}" Margin="0,17,150,9.852" HorizontalAlignment="Right" Width="80" Height="25" TabIndex="15"/>
            	<Button x:Name="button_cancel" Content="{DynamicResource Lang_Frm_Guide_two_Cancel}" Command="{Binding CmdCancel}" HorizontalAlignment="Right" Margin="0,17,50,9.852" Width="80" Height="25" TabIndex="16"/>
            </Grid>
		</Grid>
	</Grid>
</localInterface:CustomWindow>